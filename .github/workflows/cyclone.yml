name: Create SBOM 1
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  cve_scan:
    name: Generate SBOM
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
     
#       - name: Get date
#         id: get-date
#         run: |
#           echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
#       -  name: Get cached database
#          uses: actions/cache@v2
#          with:
#           path: ~/.cache/cve-bin-tool
#           key: ${{ runner.os }}-cve-bin-tool-${{ steps.get-date.outputs.date }}
#       - name: Install dependencies and cve-bin-tool
#         run: |
#           python -m pip install --upgrade pip
#           pip install cve-bin-tool
#           python -m pip install --upgrade setuptools
#           python -m pip install --upgrade wheel
      - name: Install Cyclone DX
        run : |
          pip install cyclonedx-bom

        
      - name: Generate requirements
        run: |
          pip freeze > requirements.txt
          dir
      - name: Generate SBOM
        run: |
          cyclonedx-bom -r
#          dir
#       - name: Generate Report
#         uses: actions/upload-artifact@v2
#         with:
#           name: XML_Report
#           path: cyclonedx.xml
#       - name: Scan SBOM
#         run: |
#            cve-bin-tool --sbom cyclonedx --sbom-file cyclonedx.xml
     
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: cyclonedx.xml
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: path/to/artifact
          
      - name: Display structure of downloaded files
      run: ls -R
      working-directory: path/to/artifact
       
          
      
